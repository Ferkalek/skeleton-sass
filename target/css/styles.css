a:hover{text-decoration:none}ul ul,ul ol,ol ol,ol ul{font-size:100%}code,pre{font-size:1.5rem;font-family:Consolas, "Courier New", Courier, monospace;background:rgba(255,255,255,0.3);border:0 none;border-radius:0;padding:0.25rem}code.plain,pre.plain{background:none}body{margin:0;background:#666 url("../images/shattered.png") repeat 0 0}fieldset{border:0 none;margin:0;padding:0}nav{background-color:rgba(255,255,255,0.35);font-size:1.777rem}nav h3{margin-bottom:0;margin-top:0.5rem}nav ul{margin-bottom:0;padding:0;white-space:nowrap;list-style:none}nav ul li{margin-bottom:0;line-height:3.5;width:16.66667%;float:left;text-align:center}nav ul li a{text-decoration:none;line-height:3.5;padding:0.5rem}nav ul li a,nav ul li a:visited{color:#ed1c24}nav ul li a:hover{color:#af0e14}.small{font-size:1.126rem}.large{font-size:2rem}.bold{font-weight:bold}.center{text-align:center}.circle{border:5px solid black;border-radius:50rem;display:inline-block;height:10rem;width:10rem}.circle.fa{line-height:1.6565;font-size:5.61rem}.scroll-down .fa-circle-thin{font-size:7.478rem !important;margin-left:3.5rem}.scroll-down .fa-arrow-down{font-size:2rem !important;position:relative;right:58px;bottom:15px}.intro{text-align:center;padding-top:10%}.features .title{margin-bottom:1rem;font-weight:700;color:#5f5f5f;font-size:1.5rem}.features:before,.features:after{content:" ";display:table}.features:after{clear:both}.features{*zoom:1}.features .fa{margin-bottom:1rem}section .fa{font-size:2.666rem}section ul li{line-height:1.5}section ul .fa{font-size:1.5rem;padding-right:1rem}section.learn_more{color:white;padding-top:3.157rem;background:rgba(255,255,255,0.4) url("../images/code.png") no-repeat 5% center;background-size:cover}section.learn_more h4{color:white}section.documentation{padding-top:3.157rem;background:transparent url("../images/documentation.png") no-repeat center center;background-size:cover}section.documentation h4,section.documentation h5{margin-top:0}section.documentation h5{margin-bottom:0}section.documentation ul a{color:#ed1c24;text-decoration:underline}section.documentation ul a:hover{color:#ed1c24;text-decoration:none}section.grid{background:transparent url("../images/grid.png") no-repeat center center;background-size:cover}section.grid form>div{display:flex;justify-content:center;align-items:center}section.grid h4{text-align:center}section.grid .number,section.grid label,section.grid h4,section.grid h5{color:white}section.grid label{padding-bottom:1rem}section.grid .number{font-size:3.554rem;margin-bottom:3.554rem}section.grid pre{border:0 none;border-radius:2px;padding:0.634rem;color:white;background:rgba(0,0,0,0.2);word-break:break-word}section.footer .copyright{text-align:center}.animated{animation-duration:1.2s;animation-fill-mode:both}.animated.infinite{animation-iteration-count:infinite}.animated.fadeInDownAndOut{animation-name:fadeInDown}@keyframes fadeInDown{from{opacity:0;transform:translate3d(0, -90%, 0)}to{opacity:1;transform:translate3d(0, 50%, 0)}}@media only screen and (max-width: 749px){nav ul li{width:100%;float:none;text-align:left}nav ul li a{display:block;width:100%;line-height:2.5}nav ul li a:hover{background:rgba(255,255,255,0.5)}section.home .fa-circle-thin{display:none}}@media only screen and (min-width: 480px) and (max-width: 749px){.home .fa-circle-thin{display:none}}@media only screen and (max-width: 479px){.home .fa-circle-thin{display:none}}@media (min-width: 550px){.container{padding:0 1%}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
